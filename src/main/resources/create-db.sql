DROP TABLE IF EXISTS Grade;
DROP TABLE IF EXISTS Student_Subject;
DROP TABLE IF EXISTS University_Class;
DROP TABLE IF EXISTS Subject;
DROP TABLE IF EXISTS SOS_Role;
DROP TABLE IF EXISTS Department;
DROP TABLE IF EXISTS Lending;
DROP TABLE IF EXISTS Reservation;
DROP TABLE IF EXISTS Payment;
DROP TABLE IF EXISTS SOS_User;
DROP TABLE IF EXISTS Address;
DROP TABLE IF EXISTS Library_Item;

CREATE TABLE Library_Item(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quantity INTEGER NOT NULL
);

CREATE TABLE Address(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    address_line_1 VARCHAR(255) NOT NULL,
    address_line_2 VARCHAR(255)
);

CREATE TABLE SOS_User(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id_number VARCHAR(50) UNIQUE,
    active BOOLEAN NOT NULL,
    deleted BOOLEAN NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone_2fa VARCHAR(20),
    accepted_privacy_policy BOOLEAN DEFAULT FALSE NOT NULL,
    accepted_terms_of_use BOOLEAN DEFAULT FALSE NOT NULL,
    name VARCHAR(100) NOT NULL,
    surname VARCHAR(100) NOT NULL,
    registered_address INTEGER NOT NULL,
    residential_address INTEGER,
    correspondence_address INTEGER,
    blocked_account BOOLEAN DEFAULT FALSE NOT NULL,
    block_time DATETIME,
    FOREIGN KEY (registered_address) REFERENCES Address(id) ON DELETE CASCADE,
    FOREIGN KEY (residential_address) REFERENCES Address(id) ON DELETE SET NULL,
    FOREIGN KEY (correspondence_address) REFERENCES Address(id) ON DELETE SET NULL
);

CREATE TABLE Payment(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER NOT NULL,
    type VARCHAR(50) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (student_id) REFERENCES SOS_User(id) ON DELETE CASCADE
);

CREATE TABLE Reservation(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    reservation_date DATE NOT NULL,
    reservation_status VARCHAR(50) NOT NULL,
    user_id INTEGER NOT NULL,
    library_item_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES SOS_User(id) ON DELETE CASCADE,
    FOREIGN KEY (library_item_id) REFERENCES Library_Item(id) ON DELETE CASCADE
);

CREATE TABLE Lending(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lending_date DATE NOT NULL,
    return_date DATETIME,
    user_id INTEGER NOT NULL,
    library_item_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES SOS_User(id) ON DELETE CASCADE,
    FOREIGN KEY (library_item_id) REFERENCES Library_Item(id) ON DELETE CASCADE
);

CREATE TABLE Department(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE SOS_Role(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    department_id INTEGER NOT NULL,
    name VARCHAR(100) NOT NULL,
    is_admin BOOLEAN DEFAULT FALSE NOT NULL,
    FOREIGN KEY (department_id) REFERENCES Department(id) ON DELETE CASCADE
);

CREATE TABLE Subject(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    time DATETIME NOT NULL,
    description VARCHAR(255) NOT NULL,
    title VARCHAR(255) NOT NULL,
    max_students INTEGER NOT NULL,
    is_active BOOLEAN,
    semester VARCHAR(50) NOT NULL,
    academic_year INTEGER NOT NULL,
    registration_start DATETIME NOT NULL,
    registration_end DATETIME NOT NULL,
    room_number VARCHAR(50) NOT NULL,
    lecturer_id INTEGER,
    department_id INTEGER NOT NULL,
    FOREIGN KEY (lecturer_id) REFERENCES SOS_User(id) ON DELETE SET NULL,
    FOREIGN KEY (department_id) REFERENCES Department(id) ON DELETE CASCADE
);

CREATE TABLE University_Class(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subject_id INTEGER NOT NULL,
    start_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    FOREIGN KEY (subject_id) REFERENCES Subject(id) ON DELETE CASCADE
);

CREATE TABLE Student_Subject(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER NOT NULL,
    subject_id INTEGER NOT NULL,
    registration_time DATETIME,
    FOREIGN KEY (student_id) REFERENCES SOS_User(id) ON DELETE CASCADE,
    FOREIGN KEY (subject_id) REFERENCES Subject(id) ON DELETE CASCADE
);

CREATE TABLE Grade(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_subject_id INTEGER NOT NULL,
    grade DECIMAL(2,1) NOT NULL,
    type VARCHAR(50) NOT NULL,
    grading_date DATETIME NOT NULL,
    FOREIGN KEY (student_subject_id) REFERENCES Student_Subject(id) ON DELETE CASCADE
);
